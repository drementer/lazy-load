{"mappings":"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","sources":["src/main.js","src/defaultSettings.js","src/assetLoader.js","src/observer.js","src/getElements.js"],"sourcesContent":["/**\n * Lazy-load.js\n *\n * @author drementer\n * @module lazyLoad\n * @version 1.0.7\n * @license MIT\n * @see {@link https://github.com/drementer/lazy-load.js}\n */\n\nimport defaultSettings from './defaultSettings.js';\nimport loadAsset from './assetLoader.js';\nimport observer from './observer.js';\nimport { getElements } from './getElements.js';\n\nconst lazyLoad = (selector, customSettings = {}) => {\n  const settings = { ...defaultSettings, ...customSettings };\n  const lazyItems = getElements(selector);\n\n  if (!lazyItems.length) return console.warn('No lazy loadable element found!');\n\n  const observerCallback = (target) => {\n    try {\n      settings.onLoading(target);\n      loadAsset(target, settings);\n    } catch (error) {\n      settings.onError(target, error.message);\n    }\n  };\n\n  lazyItems.forEach((item) =>\n    observer(item, observerCallback, settings.observer)\n  );\n};\n\nexport default lazyLoad;\n","const defaultSettings = {\n  attrs: {\n    src: 'lazy',\n    srcset: 'lazy-srcset',\n    poster: 'lazy-poster',\n  },\n  modifiers: {\n    loaded: '-loaded',\n    loading: '-loading',\n  },\n  onLoaded: () => {},\n  onLoading: () => {},\n  onError: (element, error) => console.warn('Error on:', element, error),\n  observer: {\n    root: null,\n    threshold: 1,\n    rootMargin: '100% 0px',\n  },\n};\n\nexport default defaultSettings;\n","const regularLoad = (element, assets) => {\n  element.src = assets.src;\n};\n\nconst loadImage = (element, assets) => {\n  element.src = assets.src;\n  if (assets.srcset) element.srcset = assets.srcset;\n};\n\nconst loadVideo = (element, assets) => {\n  element.src = assets.src;\n\n  if (assets.poster) element.poster = assets.poster;\n};\n\nconst loadPicture = (element, assets) => {\n  let img = element.querySelector('img');\n\n  if (!img) {\n    img = document.createElement('img');\n    element.appendChild(img);\n  }\n\n  loadImage(img, assets);\n};\n\nconst assetLoaders = {\n  img: loadImage,\n  picture: loadPicture,\n  video: loadVideo,\n  iframe: regularLoad,\n  embed: regularLoad,\n  object: regularLoad,\n};\n\nconst loadAsset = (element, settings) => {\n  const elementType = element.tagName.toLowerCase();\n  const assetLoader = assetLoaders[elementType];\n\n  if (!assetLoader) {\n    throw new Error(`Element type '${elementType}' is not supported!`);\n  }\n\n  const assets = {\n    src: element.getAttribute(settings.attrs.src),\n    srcset: element.getAttribute(settings.attrs.srcset),\n    poster: element.getAttribute(settings.attrs.poster),\n  };\n\n  const handleLoadEvent = () => {\n    element.classList.remove(settings.modifiers.loading);\n    element.classList.add(settings.modifiers.loaded);\n\n    element.removeAttribute(settings.attrs.src);\n    element.removeAttribute(settings.attrs.srcset);\n    element.removeAttribute(settings.attrs.poster);\n\n    settings.onLoaded(element);\n  };\n\n  assetLoader(element, assets);\n\n  element.classList.add(settings.modifiers.loading);\n  element.addEventListener('load', handleLoadEvent, { once: true });\n};\n\nexport default loadAsset;\n","const observer = (item, callback, settings) => {\n  const observer = new IntersectionObserver((entries) => {\n    entries.forEach((entry) => {\n      if (!entry.isIntersecting) return;\n\n      callback(entry.target);\n      observer.unobserve(entry.target);\n    });\n  }, settings);\n\n  observer.observe(item);\n};\n\nexport default observer;\n","const getElements = (selector, root = document) => {\n  if (selector instanceof Element) return [selector];\n  if (selector instanceof NodeList) return selector;\n  if (selector instanceof Array) return selector;\n\n  return root.querySelectorAll(selector);\n};\n\nexport { getElements };\n"],"names":[],"version":3,"file":"lazy-load.js.map","sourceRoot":"../"}